#!/usr/bin/env bash


CANAME=local-rootCA

# clean the directory
if [ ! -d "$HOME/dev_certs" ]; then
	mkdir -p "$HOME/dev_certs/certs"
	# generate private key for CA authority
	openssl genrsa -aes256 -out "$HOME/dev_certs/$CANAME.key" 4096
else 
	rm -r "$HOME/dev_certs/certs"
	mkdir "$HOME/dev_certs/certs"
fi



# generate certificate (there is 398 day limit on macos I think?)
openssl req -x509 -new -nodes -key "$HOME/dev_certs/$CANAME.key" -sha256 -days 398 -out "$HOME/dev_certs/certs/$CANAME.crt" -subj '/CN=local rootCA/C=CA/ST=ON/L=Waterloo/O=DevCerts'

# create the dev cert for dotnet
MYCERT=dotnet-dev-cert
openssl req -new -nodes -out "$HOME/dev_certs/certs/$MYCERT.csr" -newkey rsa:4096 -keyout "$HOME/dev_certs/certs/$MYCERT.key" -subj '/CN=dotnet local/C=CA/ST=ON/L=Waterloo/O=DevCerts'

# create a v3 ext file for SAN properties
cat > "$HOME/dev_certs/certs/$MYCERT.v3.ext" << EOF
basicConstraints        = critical, CA:FALSE
keyUsage                = critical, digitalSignature,keyEncipherment,dataEncipherment
extendedKeyUsage        = critical, serverAuth
subjectAltName          = critical, @alt_names
1.3.6.1.4.1.311.84.1.1  = ASN1:UTF8String:ASP.NET Core HTTPS development certificate # Needed to get it imported by dotnet dev-certs

[alt_names]
DNS.1                   = localhost
IP.1                   = 10.0.0.114
IP.2                   = 127.0.0.1
EOF

openssl x509 -req -in "$HOME/dev_certs/certs/$MYCERT.csr" -CA "$HOME/dev_certs/certs/$CANAME.crt" -CAkey "$HOME/dev_certs/$CANAME.key" -CAcreateserial -out "$HOME/dev_certs/certs/$MYCERT.crt" -days 365 -sha256 -extfile "$HOME/dev_certs/certs/$MYCERT.v3.ext"

# generate pfx for dotnet
openssl pkcs12 -export -out "$HOME/dev_certs/certs/$MYCERT.pfx" -inkey "$HOME/dev_certs/certs/$MYCERT.key" -in "$HOME/dev_certs/certs/$MYCERT.crt"

#manually remove the certs, idk why --clean doesnt work
rm -r $HOME/.dotnet/corefx/cryptography
# clean the dev certs, import the pfx
dotnet dev-certs https --clean --import "$HOME/dev_certs/certs/$MYCERT.pfx" -p ""

# trust the root CA
sudo trust anchor --store "$HOME/dev_certs/certs/$CANAME.crt"

certutil -d sql:$HOME/.pki/nssdb -A -t "TC,C,C" -n "local-rootCA" -i $HOME/dev_certs/certs/local-rootCA.crt
